from django.db import models
from django.utils import timezone


# Create your models here.
class resultadoCalculo(models.Model):
    idDatosAcalcular = models.IntegerField('idDatosAcalcular')
    proyectadoOcupAnual = models.DecimalField('proyectadoOcupAnual', max_digits=10, decimal_places=2)
    horaSemanaTurno = models.DecimalField('horaSemanaTurno', max_digits=10, decimal_places=3)
    ensamblesXminuto = models.DecimalField('ensamblesXminuto', max_digits=10, decimal_places=3)
    ensamblesXhora = models.DecimalField('ensamblesXhora', max_digits=10, decimal_places=3)
    requerimientoDiario = models.DecimalField('requerimientoDiario', max_digits=10, decimal_places=3)
    requerimientoSem = models.DecimalField('requerimientoSem', max_digits=10, decimal_places=3)
    pzaTeoricasXprimerTurno = models.DecimalField('pzaTeoricasXprimerTurno', max_digits=10, decimal_places=3)
    pzaTeoricasXsegundoTurno = models.DecimalField('pzaTeoricasXsegundoTurno', max_digits=10, decimal_places=3)
    numTurnosRequeridos = models.DecimalField('numTurnosRequeridos', max_digits=10, decimal_places=3)
    pzaProdEnTurnos = models.DecimalField('pzaProdEnTurnos', max_digits=10, decimal_places=3)
    tiempDispoXturno = models.DecimalField('tiempDispoXturno', max_digits=10, decimal_places=3)
    hrsNcesRequeDiario = models.DecimalField('hrsNcesRequeDiario', max_digits=10, decimal_places=3)
    tiempoEfecDiario = models.DecimalField('tiempoEfecDiario', max_digits=10, decimal_places=3)
    ensamReqXdia = models.DecimalField('ensamReqXdia', max_digits=10, decimal_places=3)
    ensamXdiaMasScrap = models.DecimalField('ensamXdiaMasScrap', max_digits=10, decimal_places=3)
    timeCicloXgolpe = models.DecimalField('timeCicloXgolpe', max_digits=10, decimal_places=3)
    hrsEfectivasXturno = models.DecimalField('hrsEfectivasXturno', max_digits=10, decimal_places=3)
    timeMuertoPrimeraColum = models.DecimalField('timeMuertoPrimeraColum', max_digits=10, decimal_places=3)
    tiempoCiclo = models.DecimalField('tiempoCiclo', max_digits=10, decimal_places=3)
    pzaXhora = models.DecimalField('pzaXhora', max_digits=10, decimal_places=3)
    hrsXdiaRequeriSemanal = models.DecimalField('hrsXdiaRequeriSemanal', max_digits=10, decimal_places=3)
    pzaXturno = models.DecimalField('pzaXturno', max_digits=10, decimal_places=3)
    longTotalJigDummy = models.DecimalField('longTotalJigDummy', max_digits=10, decimal_places=3)
    longTotalJigProducto = models.DecimalField('longTotalJigProducto', max_digits=10, decimal_places=3)
    numColDummys = models.DecimalField('numColDummys', max_digits=10, decimal_places=3)
    numColJigProducto = models.DecimalField('numColJigProducto', max_digits=10, decimal_places=3)
    tiempDisponibleHornoAlDia = models.DecimalField('tiempDisponibleHornoAlDia', max_digits=10, decimal_places=3)
    horneadoXpzaPrimerDummy = models.DecimalField('horneadoXpzaPrimerDummy', max_digits=10, decimal_places=3)
    horneadoXpzaRestoDummys = models.DecimalField('horneadoXpzaRestoDummys', max_digits=10, decimal_places=3)
    horneadoXpzaProducto = models.DecimalField('horneadoXpzaProducto', max_digits=10, decimal_places=3)
    tiempRecorriPrimerDummy = models.DecimalField('tiempRecorriPrimerDummy', max_digits=10, decimal_places=3)
    tiempRecorriRestoDummys = models.DecimalField('tiempRecorriRestoDummys', max_digits=10, decimal_places=3)
    tiempRecorridoProducto = models.DecimalField('tiempRecorridoProducto', max_digits=10, decimal_places=3)
    ocupacionPrimerDummy = models.DecimalField('ocupacionPrimerDummy', max_digits=10, decimal_places=3)
    ocupacionRestoDummys = models.DecimalField('ocupacionRestoDummys', max_digits=10, decimal_places=3)
    ocupacionProducto = models.DecimalField('ocupacionProducto', max_digits=10, decimal_places=3)
    estatus = models.CharField('estatus', max_length=255)
    created_at = models.DateTimeField(auto_now_add=True) 
    updated_at = models.DateTimeField(auto_now=True)    

    def save(self, *args, **kwargs):
        self.updated_at = timezone.now()
        super().save(*args, **kwargs)
